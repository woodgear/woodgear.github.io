{"componentChunkName":"component---src-templates-blog-post-js","path":"/cube/unix-shell/","result":{"data":{"markdownRemark":{"html":"<h1>how to get cfd</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token assign-left variable\">CFD</span><span class=\"token operator\">=</span><span class=\"token string\">\"$( cd \"<span class=\"token variable\"><span class=\"token variable\">$(</span> <span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">${<span class=\"token environment constant\">BASH_SOURCE</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">></span>/dev/null <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">pwd</span> <span class=\"token punctuation\">)</span>\"</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>how to unset en$1$v</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">unset</span> xxx</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>how to read argument</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> name of script is <span class=\"token variable\">$0</span>\n<span class=\"token builtin class-name\">echo</span> first argument is <span class=\"token variable\">$1</span>\n<span class=\"token builtin class-name\">echo</span> second argument is <span class=\"token variable\">$2</span>\n<span class=\"token builtin class-name\">echo</span> seventeenth argument is <span class=\"token variable\">$17</span>\n<span class=\"token builtin class-name\">echo</span> number of arguments is <span class=\"token variable\">$#</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>or</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># ${1-foo}, \"return foo if $1 is unset</span>\n<span class=\"token variable\">${1-foo}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/9332802/how-to-write-a-bash-script-that-takes-optional-input-arguments\">how-to-write-a-bash-script-that-takes-optional-input-arguments</a></p>\n<h1>head</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/env node</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>time format</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">\"%y-%m-%d-%H-%M-%S\"</span><span class=\"token variable\">)</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>exit code</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$?</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>zip</h1>\n<h2>交集</h2>\n<p>sort a.txt b.txt | uniq -d</p>\n<h2>并集</h2>\n<p>sort a.txt b.txt | uniq </p>\n<h2>差集</h2>\n<p>a.txt-b.txt:\nsort a.txt b.txt b.txt | uniq -u\nb.txt - a.txt:\nsort b.txt a.txt a.txt | uniq -u</p>\n<h1>if error exit</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">set</span> -e <span class=\"token comment\"># 全局</span>\n<span class=\"token comment\"># 手动</span>\n<span class=\"token assign-left variable\">exit_code</span><span class=\"token operator\">=</span><span class=\"token variable\">$?</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$exit_code</span> -ne <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token variable\">$exit_code</span>\n<span class=\"token keyword\">fi</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"slug":"/cube/unix-shell/"}}}