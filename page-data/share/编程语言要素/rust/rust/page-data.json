{"componentChunkName":"component---src-templates-blog-post-js","path":"/share/编程语言要素/rust/rust/","result":{"data":{"markdownRemark":{"html":"<h1>online playground</h1>\n<p><a href=\"https://play.rust-lang.org/\">rust playground</a></p>\n<h1>define a vairable</h1>\n<p>define<em>var  => let|const|static   [mut] name [:type] = V;<br>\ntype => [&#x26; [mut] ] | [* [mut]] type</em>name;</p>\n<h1>init given size vec with generater function</h1>\n<h2>rust</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"> <span class=\"token keyword\">let</span> res<span class=\"token punctuation\">:</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>_<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p> 不是很优雅</p>\n<h1>macro</h1>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[macro_export]</span>\n<span class=\"token macro property\">macro_rules!</span> log <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token variable\">$lvl</span><span class=\"token punctuation\">:</span><span class=\"token fragment-specifier punctuation\">expr</span><span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">:</span><span class=\"token fragment-specifier punctuation\">tt</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> meta <span class=\"token operator\">=</span> <span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{} {} {}\"</span><span class=\"token punctuation\">,</span><span class=\"token macro property\">line!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token macro property\">file!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token macro property\">module_path!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> <span class=\"token macro property\">format_args!</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:?} {} {}\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$lvl</span><span class=\"token punctuation\">,</span>meta<span class=\"token punctuation\">,</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token attribute attr-name\">#[macro_export]</span>\n<span class=\"token macro property\">macro_rules!</span> info <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">:</span><span class=\"token fragment-specifier punctuation\">tt</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token macro property\">log!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">crate</span><span class=\"token module-declaration namespace\"><span class=\"token punctuation\">::</span>util<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">LogLevel</span><span class=\"token punctuation\">::</span><span class=\"token class-name\">Info</span><span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ol>\n<li>macro 会提升到root crate</li>\n</ol>\n<h1>类型标注</h1>\n<h2>turbofish</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> a  <span class=\"token operator\">=</span> <span class=\"token class-name\">Vec</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">u32</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>trait</h1>\n<h2>相等性约束(type equality constraints)</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token comment\">//complete the below code</span>\n<span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">A</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">:</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">impl</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">></span> <span class=\"token class-name\">A</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">new</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">I</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">:</span><span class=\"token class-name\">I</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span><span class=\"token keyword\">Self</span> \n    <span class=\"token keyword\">where</span> <span class=\"token class-name\">I</span><span class=\"token punctuation\">:</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> iter<span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">{</span>\n            data\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// where I:Iterator&lt;Item=T>, </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"https://play.rust-lang.org/?version=stable&#x26;mode=debug&#x26;edition=2018&#x26;code=struct%20A%3CT%3E%7B%0D%0A%20%20%20%20data%3AVec%3CT%3E%0D%0A%7D%0D%0Aimpl%3CT%3E%20A%3CT%3E%20%7B%0D%0A%20%20%20%20fn%20new%3CI%3E(iter%3AI)%20-%3ESelf%20%0D%0A%20%20%20%20where%20I%3AIterator%3CItem%3DT%3E%2C%20%0D%0A%20%20%20%20%7B%0D%0A%20%20%20%20%20%20%20%20let%20data%20%3D%20iter.collect()%3B%0D%0A%20%20%20%20%20%20%20%20Self%20%7B%0D%0A%20%20%20%20%20%20%20%20%20%20%20%20data%0D%0A%20%20%20%20%20%20%20%20%7D%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0Afn%20main()%20%7B%0D%0A%20%20%20%20let%20a%20%3D%20A%3A%3Anew(vec!%5B1%2C2%2C3%5D.iter())%3B%0D%0A%7D\">rust-play-ground</a></p>\n<h2>不同trait 相同函数名</h2>\n<h1>clippy</h1>\n<p>disable line in some line</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[allow(clippy::wrong_self_convention)]</span> \n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">xxx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>dependency</h1>\n<h2>special dependency</h2>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-toml line-numbers\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">target.'cfg(windows)'.dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">winhttp</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.4.0\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>l-array-range</h3>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">..</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:?}\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:?}\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// [1, 2, 3, 4]</span>\n<span class=\"token comment\">// [1]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>类型 引用指针</h1>","fields":{"slug":"/share/编程语言要素/rust/rust/","disqus":{"shortname":"woodgear-blog"}},"frontmatter":{"id":"vryfnf9","time":"1996-09-08T23:37:07+08:00","tag":null},"parent":{"__typename":"File","name":"rust","ext":".md","birthTime":"2020-06-08T14:42:37.812Z","changeTime":"2020-08-17T01:18:21.304Z","relativeDirectory":"share/编程语言要素/rust","absolutePath":"C:/Users/18754/ns/share/blog/share/编程语言要素/rust/rust.md"}}},"pageContext":{"slug":"/share/编程语言要素/rust/rust/","disqus":{"shortname":"woodgear-blog"}}},"staticQueryHashes":["68354608"]}