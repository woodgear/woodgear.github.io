{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/layout.js","webpack:///./src/utils/article.js"],"names":["post","data","allMarkdownRemark","edges","node","dangerouslySetInnerHTML","__html","html","query","children","render","siteTitle","site","siteMetadata","title","categories","allArticles","counter","a","category","length","rootCategory","count","ents","Object","entries","sort","b","slice","pickCategory","map","Article","fromMarkDownNode","filter","article","id","css","to","c","link","assign","this","parent","name","relativeDirectory","birthTime","changeTime","frontmatter","time","tag","directories","split","s","parserNameAndCategory","err","console","error","fileName","frontmatterTitle"],"mappings":"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","file":"component---src-pages-about-js-fe82e123b3324db038f9.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default ({ data }) => {\r\n    const post = data.allMarkdownRemark.edges[0].node\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport const query = graphql`\r\n{\r\n  allMarkdownRemark(\r\n     filter: {\r\n      frontmatter: {type: {eq: \"about\"}}\r\n    }\r\n  ) {\r\n    edges {\r\n      node {\r\n        html,\r\n        frontmatter {\r\n          id\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`\r\n","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport Article from \"../utils/article\"\r\n\r\n//TODO 这些都是应该在插件中完成的\r\nfunction pickCategory(allArticles) {\r\n    const counter = {}\r\n    for (const a of allArticles) {\r\n        if (a.category.length != 0) {\r\n            const rootCategory = a.category[0]\r\n            const count = counter[rootCategory] || 0\r\n            counter[rootCategory] = count + 1\r\n        }\r\n    }\r\n    let ents = Object.entries(counter);\r\n    ents.sort((a, b) => b[1] - a[1])\r\n    return ents.slice(0, 6)\r\n}\r\n\r\nexport default ({ children }) => (\r\n    <StaticQuery\r\n        query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n\r\n    allMarkdownRemark {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            tag\r\n            time\r\n            id\r\n          }\r\n\r\n          parent {\r\n            ... on File {\r\n              name\r\n              ext\r\n              birthTime\r\n              changeTime\r\n              relativeDirectory\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n      }\r\n    `}\r\n        render={data => {\r\n            const siteTitle = data.site.siteMetadata.title\r\n            const allArticles = data.allMarkdownRemark.edges\r\n                .map(({ node }) => Article.fromMarkDownNode(node))\r\n                .filter(([article, err]) => !err)\r\n                .map(([article, err]) => article)\r\n                .filter((article) => article.id)\r\n            const categories = pickCategory(allArticles)\r\n            return (\r\n                <div id=\"main\"\r\n                    css={css`\r\n          margin: 0 auto;\r\n          max-width: 80%;\r\n        `}\r\n                >\r\n                    <div id=\"header\"\r\n                        css={css`\r\n                        display:flex;\r\n                        flex-direction: row;\r\n                        justify-content:space-between;\r\n                `}\r\n                    >\r\n                        <div id=\"title\"\r\n                            css={css`\r\n                    `}\r\n                        >\r\n                            <Link to={`/`}>\r\n                                <h3>  {siteTitle}\r\n                                </h3>\r\n                            </Link>\r\n                        </div>\r\n                        <div id=\"sub\"\r\n                            css={css`\r\n                        display:flex;\r\n                        flex-direction: row;\r\n                        > * {\r\n                            margin-right:10px;\r\n                        }\r\n                        `}\r\n                        >\r\n                            {\r\n                                categories.map((c) => {\r\n                                    const link = `/?category=${c[0]}`\r\n                                    return (<Link to={link}>{c[0]}</Link>)\r\n                                })\r\n                            }\r\n                            <div id=\"about\">\r\n                                <Link to={\"/about\"}>about</Link></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\"\r\n                        css={css`\r\n          margin: 0 auto;\r\n          max-width: 80%;\r\n       `\r\n                        }\r\n\r\n                    > {children} </div>\r\n                </div>\r\n            )\r\n        }}\r\n    />\r\n)\r\n","class Article {\r\n    constructor(data) {\r\n        Object.assign(this, data)\r\n    }\r\n\r\n    static fromMarkDownNode(node) {\r\n        const { name, birthTime, changeTime, relativeDirectory } = node.parent\r\n        let { id, time, tag } = node.frontmatter\r\n        tag = tag || []\r\n        const regex = /(\\/|\\\\)/gm;\r\n\r\n        const directories =\r\n            relativeDirectory.split(regex).filter(s => s.length!=0&& s!=`\\\\`&&s!=`\\/`) || []\r\n        const [title, category, err] = Article.parserNameAndCategory(\r\n            directories,\r\n            name,\r\n            node.frontmatter.title\r\n        )\r\n        if (err) {\r\n            console.error(\"fromMarkDownNode fail\", node, err)\r\n            return [null, \"fromMarkDownNode fail\"]\r\n        }\r\n\r\n        return [new Article({ title, category, id, time, tag, node }), null]\r\n    }\r\n\r\n    /*  \r\n    directories:Vec<NotEmptyString>\r\n    filenName:NotEmptyString,\r\n    frontmatterTitle:Option<NotEmptyString>\r\n    */\r\n\r\n    // why i use go err handle? why? T_T\r\n    static parserNameAndCategory(directories, fileName, frontmatterTitle) {\r\n        if (!fileName || fileName.length === 0) {\r\n            return [null, null, \"fileName could not be empty\"]\r\n        }\r\n        if (directories.length === 0 && fileName === \"main\") {\r\n            return [\r\n                null,\r\n                null,\r\n                \"fileName could not be main when this file under root dir\",\r\n            ]\r\n        }\r\n\r\n        let title = null\r\n        let category = []\r\n        if (directories.length === 0) {\r\n            title = fileName\r\n            category = []\r\n        } else if (\r\n            directories[directories.length - 1] === fileName ||\r\n            fileName === \"main\"\r\n        ) {\r\n            title = directories[directories.length - 1]\r\n            category = directories.slice(0, -1)\r\n        } else {\r\n            title = fileName\r\n            category = directories\r\n        }\r\n        if (frontmatterTitle) {\r\n            title = frontmatterTitle\r\n        }\r\n        return [title, category, null]\r\n    }\r\n\r\n}\r\nexport default Article"],"sourceRoot":""}