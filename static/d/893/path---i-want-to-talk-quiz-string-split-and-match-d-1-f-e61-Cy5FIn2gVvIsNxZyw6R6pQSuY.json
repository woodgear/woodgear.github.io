{"data":{"markdownRemark":{"html":"<h2>status:draft</h2>\n<h1>需求</h1>\n<p>在很多时候我们要对字符串做匹配和捕获<br>\n举一个例子 要对命令行参数做匹配<br>\n\"add data1\"<br>\n\"rm data2\"<br>\n给定上面两个字符串 如何以最优美的方式捕获到 data1,和 data2 以便于我们后面的操作?</p>\n<h1>实现</h1>\n<h2>rust</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> s1 <span class=\"token operator\">=</span> <span class=\"token string\">\"add data1\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> s2 <span class=\"token operator\">=</span> <span class=\"token string\">\"rm data2\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">match</span> s1<span class=\"token punctuation\">.</span><span class=\"token function\">split_whitespace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>collect<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span>Vec<span class=\"token operator\">&lt;</span>_<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">]</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n          <span class=\"token function\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"in add {}\"</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">\"rm\"</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">]</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n          <span class=\"token function\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"in rm {}\"</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        _<span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n          <span class=\"token function\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sth else\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>js</h2>\n<div class=\"gatsby-highlight\" data-language=\"nodejs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-nodejs line-numbers\"><code class=\"language-nodejs\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>\n<h2>haskhell</h2>\n<div class=\"gatsby-highlight\" data-language=\"haskhell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-haskhell line-numbers\"><code class=\"language-haskhell\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>\n<h2>python</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>\n<h2>c++</h2>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-c++ line-numbers\"><code class=\"language-c++\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>\n<h2>c</h2>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-c line-numbers\"><code class=\"language-c\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>\n<h2>java</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/I Want To Talk/quiz/string-split-and-match/"}}