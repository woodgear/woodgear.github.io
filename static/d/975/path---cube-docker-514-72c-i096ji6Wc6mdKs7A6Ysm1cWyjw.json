{"data":{"markdownRemark":{"html":"<h1>how-to-ignore-files-from-your-docker-images</h1>\n<p>create a file name <a href=\"https://docs.docker.com/engine/reference/builder/#dockerignore-file\">.dockerignore</a></p>\n<h1>how to run with shell</h1>\n<p>docker run  --entrypoint /bin/bash -it xx</p>\n<h1>expose port</h1>\n<p>docker run -p 127.0.0.1:80:8080 </p>\n<h1>运行时容器端口映射</h1>\n<p>不能</p>\n<h1>设置自启</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">docker update --restart<span class=\"token operator\">=</span>no my-container\ndocker update --restart<span class=\"token operator\">=</span>always my-container</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h1>设置环境变量 set-env</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">docker run --env a=b IMAGE</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>query restart policy</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">docker inspect -f <span class=\"token string\">\"{{ .HostConfig.RestartPolicy }}\"</span>  NAME</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>外部访问容器端口</h1>\n<p>docker inspect 查看ip 直接通过ip访问</p>\n<h1>容器内部直接通过某种方式访问宿主机端口</h1>\n<p>目前好像没有对于全部平台通用的方式\n<a href=\"https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach\">docker-container-access-host-network</a></p>\n<h2>mac/windows</h2>\n<p>直接使用host.docker.internal</p>\n<h2>linux</h2>\n<p>使用host mode</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">docker run IMAGE --noauth --bind_ip=0.0.0.0</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>docker-compose</h1>\n<p>docker-compose 可以当作docker一样使用 区别在于docker-compse 使用yaml配置文件 可以方便的配置duogedocker协作的情况 用docker的话就只能用shell脚本了</p>\n<p><a href=\"https://beginor.github.io/2017/06/08/use-compose-instead-of-run.html\">what docker-compse is</a></p>\n<p>docker-compose 会去当前目录找docker-compose.yaml</p>\n<h2>port</h2>\n<p>HOST:CONTAINER </p>\n<h2>docker build</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"></span></pre></div>\n<h2>docker name format (invalid reference format)</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># 注意:是关键字 a和b中不能包含:</span>\ndocker build -t a:b</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>push dockerhub</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># docker login -u $name -p $pass $server</span>\ndocker login\n<span class=\"token comment\"># 所以只要你的docker-image的名字是正确的就能直接推上去</span>\n<span class=\"token comment\"># docker tag exist-docker-image new-docker-image</span>\ndocker push user-name/image:version</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>volume</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">docker run -v HOST:CONTAINER -p HOST:CONTAINER</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>aliyun</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;\n{\n  &quot;registry-mirrors&quot;: [&quot;https://yxjrbm4q.mirror.aliyuncs.com&quot;]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\ndocker run --name send -d -p 1443:1443 moerats/send</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","fields":{"slug":"/cube/docker/","disqus":{"shortname":"woodgear-blog"}},"frontmatter":{"id":"264dbff","time":"2020-03-22T07:14:47+08:00","tag":"docker,docker-compose"},"parent":{"__typename":"File","name":"docker","ext":".md","birthTime":"1970-01-01T00:00:00.000Z","changeTime":"2020-09-26T05:06:52.314Z","relativeDirectory":"cube","absolutePath":"/home/oaa/ns/share/blog/cube/docker.md"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cube/docker/","disqus":{"shortname":"woodgear-blog"}}}