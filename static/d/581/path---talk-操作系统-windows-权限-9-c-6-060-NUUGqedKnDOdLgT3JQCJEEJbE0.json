{"data":{"markdownRemark":{"html":"<p><a href=\"http://www.cppblog.com/weiym/archive/2013/08/25/202751.html?opt=admin\">浅析Windows安全相关的一些概念</a></p>\n<ol>\n<li>\n<p>Windows 根据什么划分权限 如何查看权限 有哪些权限\n所谓的权限指的是能力 如果你能够做某件事 那么你就有这种权限 如果不能那就没有\nwindows的权限控制是根据用户和特权来的\nSystem 只有各种服务所起的进程使用的是System的权限\n如何你登陆的时候是某种用户 那么你所创建的进程就自然而然的拥有某种权限 System>Admin>User</p>\n</li>\n<li>\n<p>Windows 的账户是什么概念? 管理员与服务所具有的权限有什么区别\n账号是用户组中的一员\n管理账号登陆进去实际上使用的是标准用户权限 等到要求使用管理员权限会弹起uac要求管理员权限这时才是真正的管理员环境\n服务是一直就是最高的System权限</p>\n</li>\n<li>\n<p>uac 会在什么时候弹出 同意uac之后具有的权限和管理员有什么区别\nuac在用户调用可执行文件时有可执行文件加载器检查是否需要提权来弹出\n进程文件包含insall setup update 等关键字 配置清单中显示要求提权</p>\n</li>\n<li>\n<p>对于一个进程 如何判断其拥有什么权限 如何提升自己的权限\n看其所属的用户\n如果是指自动提升到管理员权限的话 基本上不能(相当于黑客了) 除非重新调用一次自己(加上提权的申请 Run as 发RPC) 但是某些被disable的特权可以手动打开</p>\n</li>\n<li>\n<p>如何查看 文件或者进程的权限\nsysteminternal的accesschk</p>\n</li>\n<li>\n<p>文件虚拟化 注册表虚拟化\n[深入解析windows操作系统 p552]\n虚拟化实际上应该不算是权限机制 只能算是为了安全机制和兼容性所出的解决方案\nwindows 禁止非管理员修改%ProgramFiles% %ProgramData%SystemRoot% 和HKLM/software 为了兼容旧的程序 windows 手动的将对这些文件或者注册表的操作转到了一个虚拟的位置</p>\n</li>\n</ol>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/talk/操作系统/windows/权限/"}}