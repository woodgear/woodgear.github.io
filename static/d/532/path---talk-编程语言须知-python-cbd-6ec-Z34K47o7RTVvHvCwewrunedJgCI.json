{"data":{"markdownRemark":{"html":"<h1>规范</h1>\n<p>每个函数 必须通过文档(文档字符串) 表明参数类型返回值类型\n<a href=\"https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/#comments\">文档字符串</a></p>\n<p>类型名驼峰.文件,方法,属性,变量 小写下划线(snake_case)</p>\n<h1>包管理</h1>\n<p>pip pipenv</p>\n<h1>测试</h1>\n<h2><a href=\"https://docs.python.org/zh-cn/3/library/unittest.html\">unittest</a></h2>\n<p>python 自带的测试框架\n原理应该是通过继承来使得某个类是拥有运行测试的能力</p>\n<p>python -m unittest discover # 自动跑所有测试\npython -m unittest test.test<em>find</em>unknow_words # python -m unittest ${test-folder-name}.${test-file-name} # 制定测试文件</p>\n<h3>test suite</h3>\n<p>通过在测试类中实现特定的方法来实现初始化和析构\nsetUp() => beforeEach()\ntearDown() => afterEach()</p>\n<h1>语法</h1>\n<h1>字符串</h1>\n<p>最新的姿势叫做<a href=\"https://realpython.com/python-f-strings/\">f-strings</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">name = &quot;misaki&quot;\nage = &quot;16&quot;\ndesc = f&quot;{name} is {age} years old&quot;\nprint(desc)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>OO</h1>\n<p>类中如何定义属性 初始化 设置/获取属性 如何定义方法</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">Class <span class=\"token class-name\">Demo</span><span class=\"token punctuation\">:</span>\n    count_of_call_get <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># class attribute access via Demo.count_of_call_get</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span> <span class=\"token comment\"># a is instance attribute</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_a</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>a <span class=\"token comment\"># acess via self</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">set_a</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>a <span class=\"token comment\"># modify via self</span>\n    <span class=\"token punctuation\">}</span>\n    </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>capture-control-c-in-python</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># DO THINGS</span>\n<span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># quit</span>\n    sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>实际上每个try catch 都必须处理KeyboardInterrupt才能生效</p>\n<h1>try catch</h1>\n<div class=\"gatsby-highlight\" data-language=\"python3\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python3 line-numbers\"><code class=\"language-python3\">try:\n    raise Exception(&#39;spam&#39;, &#39;eggs&#39;)\nexcept Exception as inst:\n    print(inst)  </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/talk/编程语言须知/python/"}}