{"data":{"markdownRemark":{"html":"<h2>status:draft</h2>\n<h1>需求</h1>\n<p>在很多时候我们要对字符串做匹配和捕获<br>\n举一个例子 要对命令行参数做匹配<br>\n\"add data1\"<br>\n\"rm data2\"<br>\n给定上面两个字符串 如何以最优美的方式捕获到 data1,和data2以便于我们后面的操作?</p>\n<h1>实现</h1>\n<h2>rust</h2>\n<pre><code class=\"language-rust\">fn main() {\n    let s1 = \"add data1\".to_string();\n    let s2 = \"rm data2\".to_string();\n    match &#x26;s1.split_whitespace().collect::&#x3C;Vec&#x3C;_>>()[..] {\n        [\"add\",data]=>{\n          println!(\"in add {}\",data);  \n        },\n        [\"rm\",data]=>{\n          println!(\"in rm {}\",data);  \n        },\n        _=>{\n          println!(\"sth else\");             \n        }\n    }\n}\n</code></pre>\n<h2>js</h2>\n<pre><code class=\"language-nodejs\"></code></pre>\n<h2>haskhell</h2>\n<pre><code class=\"language-haskhell\"></code></pre>\n<h2>python</h2>\n<pre><code class=\"language-python\"></code></pre>\n<h2>c++</h2>\n<pre><code class=\"language-c++\"></code></pre>\n<h2>c</h2>\n<pre><code class=\"language-c\"></code></pre>\n<h2>java</h2>\n<pre><code class=\"language-java\"></code></pre>","frontmatter":{"title":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/I Want To Talk/quiz/string-split-and-match/"}}