{"data":{"markdownRemark":{"html":"<h1>online playground</h1>\n<p><a href=\"https://play.rust-lang.org/\">rust playground</a></p>\n<h1>define a vairable</h1>\n<p>define<em>var  => let|const|static   [mut] name [:type] = V;<br>\ntype => [&#x26; [mut] ] | [* [mut]] type</em>name;</p>\n<h1>静态编译</h1>\n<h2>windows</h2>\n<div class=\"gatsby-highlight\" data-language=\"bat\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bat line-numbers\"><code class=\"language-bat\">set RUSTFLAGS=-C target-feature=+crt-static&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>windows xp</h2>\n<div class=\"gatsby-highlight\" data-language=\"bat\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bat line-numbers\"><code class=\"language-bat\">set RUSTFLAGS=-C target-feature=+crt-static  -C link-arg=/SUBSYSTEM:CONSOLE,5.01</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>init given size vec with generater function</h1>\n<h2>rust</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"> <span class=\"token keyword\">let</span> res<span class=\"token punctuation\">:</span>Vec<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">..</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token operator\">|</span>_<span class=\"token operator\">|</span> T<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p> 不是很优雅</p>\n<h1>macro</h1>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[macro_export]</span>\n<span class=\"token macro-rules function\">macro_rules!</span> log <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span>$lvl<span class=\"token punctuation\">:</span>expr<span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">(</span>$arg<span class=\"token punctuation\">:</span>tt<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> meta <span class=\"token operator\">=</span> <span class=\"token function\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{} {} {}\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">line!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">file!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">module_path!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> <span class=\"token function\">format_args!</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">(</span>$arg<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:?} {} {}\"</span><span class=\"token punctuation\">,</span>$lvl<span class=\"token punctuation\">,</span>meta<span class=\"token punctuation\">,</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token attribute attr-name\">#[macro_export]</span>\n<span class=\"token macro-rules function\">macro_rules!</span> info <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">(</span>$arg<span class=\"token punctuation\">:</span>tt<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">log!</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">crate</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>util<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>LogLevel<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>Info<span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">(</span>$arg<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ol>\n<li>macro 会提升到root crate</li>\n</ol>\n<h1>类型标注</h1>\n<h2>turbofish</h2>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> a  <span class=\"token operator\">=</span> Vec<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>new<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span>u32<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/talk/编程语言须知/rust/rust/"}}