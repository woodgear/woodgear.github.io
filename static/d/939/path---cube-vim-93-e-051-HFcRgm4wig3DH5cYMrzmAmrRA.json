{"data":{"markdownRemark":{"html":"<h1>mutli line edit</h1>\n<p>visual block Practical vim p42 用面向列的可视模式编辑表格数据\nctrl+v 进入面向列的可视模式\nc 编辑列 esc 应用编辑\nc:删除并进入插入模式\n插入操作看起来只影响顶行 但实际上影响所有行 只有等到返回普通模式时才真正显示操作结果(这种怪异的现象的原因很简单 vim没有实现好而已)\n实际上当用ctrl+v进入到可视模式时实际上还是普通模式可以用x . 等命令</p>\n<h1>多文件编辑</h1>\n<p>vsp 与sp</p>\n<h1>surround quote</h1>\n<p>install vim-surround</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">yss&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>jump to line end</h1>\n<p>use <code class=\"language-text\">$</code></p>\n<h1>replace only visual area (mutli line)</h1>\n<p>into visual mode select txt and enter ':' it will show <code class=\"language-text\">&#39;&lt;,&#39;&gt;</code> then just use <code class=\"language-text\">s/xx/xxx/g</code> pattern</p>\n<h1>replace only visual area (part of line)</h1>\n<p>not a elegant way\n[]</p>\n<h1>plugin manager</h1>\n<p><a href=\"https://github.com/junegunn/vim-plug\">vim-plug</a></p>\n<h2>install</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"># vim\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n# nvim \ncurl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>vim termimal mode</h1>\n<h2>exit</h2>\n<p>c+\\c+n</p>\n<h1>vim delete all content under a bracket</h1>\n<h2>1 ]}</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{ _\n    {\n        ddddddd\n    }\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">d]} # ] ]x goto unmatched x</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{\n\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h1>i} i) a} a) etc</h1>\n<p>i} \"inner Block\", select [count] Blocks, from \"[count]{\"to the matching '}', excluding the '{' and '}'</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">di}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>居中</h1>\n<p>zz</p>\n<h1>split windows</h1>\n<h2>split new window edit same file</h2>\n<p>ctrl+w+v</p>\n<h1>将多行文本加上\"</h1>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-vim line-numbers\"><code class=\"language-vim\"><span class=\"token comment\">\" first use vim-surround to surround one line</span>\nyss<span class=\"token comment\">\"</span>\n<span class=\"token comment\">\" then use norm command to apply this behavior in mutli line</span>\n<span class=\"token punctuation\">:</span><span class=\"token operator\">.</span><span class=\"token punctuation\">,</span>$ norm <span class=\"token operator\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>批量生成数字</h1>\n<p>例如生成'vec![\"xxx 1\".to_string(),\"xxx2\".to_string()]'</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-vim line-numbers\"><code class=\"language-vim\"><span class=\"token punctuation\">:</span><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token function\">rage</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> |<span class=\"token keyword\">put</span> <span class=\"token operator\">=</span><span class=\"token string\">'\\\"xxx '</span><span class=\"token operator\">.</span>i<span class=\"token operator\">.</span><span class=\"token string\">'\\\".to_string(),'</span>|<span class=\"token keyword\">endfor</span>\n<span class=\"token punctuation\">:</span><span class=\"token operator\">.</span><span class=\"token punctuation\">,</span><span class=\"token operator\">.</span><span class=\"token operator\">+</span><span class=\"token number\">10</span> s<span class=\"token operator\">/</span>\\<span class=\"token keyword\">n</span><span class=\"token operator\">/</span><span class=\"token punctuation\">,</span><span class=\"token operator\">/</span>g</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h1>jump to previous location</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">mi // 给当前位置打上i标记\n`i // 跳转到 i标记位置\n`` //跳转到之前位置</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cube/vim/"}}