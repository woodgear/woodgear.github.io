{"data":{"markdownRemark":{"html":"<h1>how to install</h1>\n<h2>docker</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">docker run -d --hostname my-rabbit --name mq -p 8080:15672 -p 5672:5672 rabbitmq:3-management</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>then login <a href=\"http://localhost:8080/#/\">http://localhost:8080/#/</a> with guest / guest</p>\n<h1>模型</h1>\n<p>rabbitmq的核心是queue 通过不同的exchange和bindingkey将客户端发来的信息推送到queue上<br>\n对于queue里的一个元素来讲只有一个消费者</p>\n<p>对于消费者有routerkey的概念\n对于生产者有bindingkey的概念</p>\n<h1>minotor</h1>\n<p>如何查看通过某个exchange的所有msg而不消费这个msg\n如何查看通过某个queue的所有msg而不消费这个msg</p>\n<h1>开启 rabbitmq-manager</h1>\n<p>rabbitmq-plugins enable rabbitmq_management</p>\n<h1>开启trace</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> rabbitmqctl trace_on -p /\n<span class=\"token function\">sudo</span> rabbitmq-plugins <span class=\"token function\">enable</span>  rabbitmq_tracing\n<span class=\"token comment\"># rabbitmq_tracing plugin 默认只有 guest 能够访问 tracefile</span>\n<span class=\"token punctuation\">[</span>only-guest-could-see-trace-file<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https://github.com/rabbitmq/rabbitmq-tracing/issues/1<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>修复方式<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https://github.com/rabbitmq/rabbitmq-tracing/pull/5<span class=\"token comment\">#issuecomment-507278511)</span>\n```/etc/rabbitmq/advanced.config\n<span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>rabbitmq_tracing, <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>username, <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"USER\"</span><span class=\"token operator\">>></span><span class=\"token punctuation\">}</span>,\n        <span class=\"token punctuation\">{</span>password, <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"PASS\"</span><span class=\"token operator\">>></span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Use your own username and password of course. The &#x3C;&#x3C;\"\">> is significant.</p>\n</blockquote>\n<h1>log</h1>\n<p>rabbitmq-diagnostics status\n输出中有log file 路径</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"># 创建用户\n```bash\ncurl -i -u guest:guest --header &quot;Content-Type: application/json&quot; --request PUT --data &#39;{&quot;password&quot;:&quot;dev&quot;,&quot;tags&quot;:&quot;administrator&quot;}&#39; http://127.0.0.1:15672/api/users/dev\n\ncurl -i -u guest:guest --header &quot;Content-Type: application/json&quot; --request PUT --data &#39;{&quot;configure&quot;:&quot;.*&quot;,&quot;write&quot;:&quot;.*&quot;,&quot;read&quot;:&quot;.*&quot;}&#39; http://127.0.0.1:15672/api/permissions/%2F/dev</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>connection</h1>\n<p><a href=\"https://www.rabbitmq.com/uri-spec.html\">https://www.rabbitmq.com/uri-spec.html</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&quot;amqp://guest:guest@127.0.0.1:5672/&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h1>exchange<em>name router</em>key binding_key 关系是什么</h1>\n<h1>tools</h1>\n<p>rabbitmqctl 看起来不能连接远端的rabbitmq server?</p>\n<h1>glassess</h1>\n<p>given ip port name passed what we can get from rabbitmq</p>\n<h2>rabbitmq 版本</h2>\n<h1>如何debug 客户端接受不到msg的信息？ exchange routerkey是正确的</h1>\n<ol>\n<li>检查unroutable exchange  (how???)</li>\n</ol>","fields":{"slug":"/cube/rabbitmq/","disqus":{"shortname":"woodgear-blog"}},"frontmatter":{"id":"rwjuyom","time":"1996-09-08T23:37:07+08:00","tag":null},"parent":{"__typename":"File","name":"rabbitmq","ext":".md","birthTime":"1970-01-01T00:00:00.000Z","changeTime":"2020-11-26T15:07:30.774Z","relativeDirectory":"cube","absolutePath":"/home/oaa/ns/share/blog/cube/rabbitmq.md"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/cube/rabbitmq/","disqus":{"shortname":"woodgear-blog"}}}