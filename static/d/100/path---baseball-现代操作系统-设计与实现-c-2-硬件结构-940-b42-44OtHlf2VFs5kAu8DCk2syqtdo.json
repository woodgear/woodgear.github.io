{"data":{"markdownRemark":{"html":"<h2>2.1.1 指令集</h2>\n<h3>q1. 假设我们将CPU当作一块一个整理,数据搬移,寄存器计算,特权指令都还好理解,这些都能通过CPU本身解决.但是类似于内存读写,跳转指令,过程调用指令这些实际上就涉及到了内存也是操作系统提供抽象来解决的问题.CPU在没有操作系统是如何运作的?</h3>\n<p>p18页最上方有所解释,CPU访问内存不需要操作系统代码,而是通过主板来和内存进行交互.</p>\n<h3>q2. 调用指令,返回指令指的是什么? 在CPU指令的定义中什么叫做调用什么叫做返回?</h3>\n<h2>2.1.2 特权级</h2>\n<h3>q1. 特权级是什么?当我通过指令进入到某个特权级时指的是什么?CPU接受的是指令,那些指令是有特权级的区分的?</h3>\n<h2>2.1.3 寄存器</h2>\n<h3>q1. 什么叫做在EL1特权级下有两个页表基地址寄存器?是指的CPU固件约定的只有这在个特权级状态下才能使用的寄存器吗?</h3>\n<h2>2.2.1 缓存结构</h2>\n<h2>2.2.2 缓存寻址</h2>\n<p>这TM讲的又是什么鬼东西...</p>\n<h2>2.3.1 内存映射输入输出</h2>\n<h3>q1. <code class=\"language-text\">把输入输出设备和物理内存放到同一个地址空间,为设备内部的内存和寄存器也分配相应的地址</code> 这个是MMIO的效果,原理是什么,或者将是怎么样达成MMIO的?</h3>\n<h3>q2. <code class=\"language-text\">设备会通过总线监听CPU分配给自己的地址,然后完成相应的请求</code> 设备是怎么知道的?</h3>","fields":{"slug":"/baseball/现代操作系统:设计与实现/c2:硬件结构/","disqus":{"shortname":"woodgear-blog"}},"frontmatter":{"id":"186d05","time":"2020-11-13T20:56:36+08:00","tag":null},"parent":{"__typename":"File","name":"c2:硬件结构","ext":".md","birthTime":"1970-01-01T00:00:00.000Z","changeTime":"2020-11-27T01:32:42.982Z","relativeDirectory":"baseball/现代操作系统:设计与实现","absolutePath":"/home/oaa/ns/share/blog/baseball/现代操作系统:设计与实现/c2:硬件结构.md"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/baseball/现代操作系统:设计与实现/c2:硬件结构/","disqus":{"shortname":"woodgear-blog"}}}