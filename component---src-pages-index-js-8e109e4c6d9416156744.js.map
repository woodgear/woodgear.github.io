{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref3","articles","data","allMarkdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","totalCount","edges","map","_ref4","node","fileNode","parent","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","css","_ref","name","_ref2","changeTime","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","typography","Typography","kirkhamTheme","rhythm","core_browser_esm","gatsby_browser_entry","site","siteMetadata","title","_3892401927"],"mappings":"sRAYeA,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACMC,kBAEtB,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,UAAKH,EAASM,WAAd,UACCN,EAASO,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACfC,EAAWD,EAAKE,OACtB,OACET,OAAAC,EAAA,EAAAD,CAAA,OAAKU,IAAKH,EAAKI,IACbX,OAAAC,EAAA,EAAAD,CAACY,EAAA,EAAD,CACEC,GAAIN,EAAKO,OAAOC,KAChBC,IAAGC,GAKHjB,OAAAC,EAAA,EAAAD,CAAA,UACGQ,EAASU,KACVlB,OAAAC,EAAA,EAAAD,CAAA,QACEgB,IAAGG,GADL,KAKKX,EAASY,oBAYzB,IAAMC,EAAK,kCCjDlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6KCYzCK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvB/B,OAAAgC,EAAA,EAAAhC,CAAC2B,EAAmBM,SAApB,KACG,SAAAC,GACC,OACEH,EAAMjC,MACLoC,EAAgBH,EAAMV,QAAUa,EAAgBH,EAAMV,OAAOvB,MAEtDiC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMjC,KAAOiC,EAAMjC,KAAKA,KAAOoC,EAAgBH,EAAMV,OAAOvB,MAGvDE,OAAAgC,EAAA,EAAAhC,CAAA,uCA4Bf8B,EAAYO,UAAY,CACtBvC,KAAMwC,IAAUC,OAChBlB,MAAOiB,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,uLCnDhBC,EAAmB,SAAA1B,GAAkB,IAAf2B,EAAe3B,EAAf2B,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOpB,IAAMqB,cAAcC,IAApBlD,OAAAmD,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,6GClBTW,EAAa,IAAIC,IAAWC,KAGrBC,EAASH,EAAWG,gBCDlB9D,EAAA,WAAAsB,GAAA,IAAGmB,EAAHnB,EAAGmB,SAAH,OACbpC,OAAA0D,EAAA,EAAA1D,CAAC2D,EAAA,EAAD,CACEtC,MAAK,aASLc,OAAQ,SAAArC,GAAI,OACVE,OAAA0D,EAAA,EAAA1D,CAAA,OACEgB,IAAKA,YAAF,yCAGUyC,EAAO,IAHjB,gBAIcA,EAAO,KAJrB,MAOHzD,OAAA0D,EAAA,EAAA1D,CAAC2D,EAAA,EAAD,CAAM9C,GAAE,KACNb,OAAA0D,EAAA,EAAA1D,CAAA,MACEgB,IAAKA,YAAF,iBACgByC,EAAO,GADvB,6CAMF3D,EAAK8D,KAAKC,aAAaC,QAG3B1B,EACDpC,OAAA0D,EAAA,EAAA1D,CAAA,cA/BNF,KAAAiE","file":"component---src-pages-index-js-8e109e4c6d9416156744.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport Layout from \"../components/layout\"\n\n//TOOD time diff\n//TODO group sort\n//TODO empty article\n//TODO readme\n//TODO global use\n//TODO tag\n//TODO image\nexport default ({ data }) => {\n  const articles = data.allMarkdownRemark\n\n  return (\n    <Layout>\n      <div>\n        <h4>{articles.totalCount} Posts</h4>\n        {articles.edges.map(({ node }) => {\n          const fileNode = node.parent\n          return (\n            <div key={node.id}>\n              <Link\n                to={node.fields.slug}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <h3>\n                  {fileNode.name}\n                  <span\n                    css={css`\n                      color: #bbb;\n                    `}\n                  >\n                    â€” {fileNode.changeTime}\n                  </span>\n                </h3>\n              </Link>\n            </div>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          parent {\n            ... on File {\n              mtime\n              birthtimeMs\n              absolutePath\n              name\n              changeTime\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(0.5)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Link to={`/`}>\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(2)};\n              display: inline-block;\n              font-style: normal;\n            `}\n          >\n            {data.site.siteMetadata.title}\n          </h3>\n        </Link>\n        {children}\n        <div />\n      </div>\n    )}\n  />\n)\n"],"sourceRoot":""}