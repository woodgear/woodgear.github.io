{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/utils/util.js","webpack:///./src/pages/index.js","webpack:///./src/utils/article.js"],"names":["children","query","render","data","siteTitle","site","siteMetadata","title","categories","allArticles","counter","a","category","length","rootCategory","count","ents","Object","entries","sort","b","slice","pickCategory","allMarkdownRemark","edges","map","node","Article","fromMarkDownNode","filter","article","id","css","to","c","link","timeAgo","left","right","leftDate","Date","rightDate","getFullYear","月","getMonth","天","getDate","小时","getHours","分钟","getMinutes","keys","key","Case","window","URLSearchParams","location","search","get","articles","l","r","time","includes","fields","slug","className","join","util","renderIndexPage","assign","this","parent","name","relativeDirectory","birthTime","changeTime","frontmatter","tag","directories","split","s","parserNameAndCategory","err","console","error","fileName","frontmatterTitle"],"mappings":"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","file":"component---src-pages-index-js-3ecbc0bf31b9f9d41eb8.js","sourcesContent":["import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport { StaticQuery, Link, graphql } from \"gatsby\"\r\nimport Article from \"../utils/article\"\r\n\r\n//TODO 这些都是应该在插件中完成的\r\nfunction pickCategory(allArticles) {\r\n    const counter = {}\r\n    for (const a of allArticles) {\r\n        if (a.category.length != 0) {\r\n            const rootCategory = a.category[0]\r\n            const count = counter[rootCategory] || 0\r\n            counter[rootCategory] = count + 1\r\n        }\r\n    }\r\n    let ents = Object.entries(counter);\r\n    ents.sort((a, b) => b[1] - a[1])\r\n    return ents.slice(0, 6)\r\n}\r\n\r\nexport default ({ children }) => (\r\n    <StaticQuery\r\n        query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n\r\n    allMarkdownRemark {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            tag\r\n            time\r\n            id\r\n          }\r\n\r\n          parent {\r\n            ... on File {\r\n              name\r\n              ext\r\n              birthTime\r\n              changeTime\r\n              relativeDirectory\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n      }\r\n    `}\r\n        render={data => {\r\n            const siteTitle = data.site.siteMetadata.title\r\n            const allArticles = data.allMarkdownRemark.edges\r\n                .map(({ node }) => Article.fromMarkDownNode(node))\r\n                .filter(([article, err]) => !err)\r\n                .map(([article, err]) => article)\r\n                .filter((article) => article.id)\r\n            const categories = pickCategory(allArticles)\r\n            return (\r\n                <div id=\"main\"\r\n                    css={css`\r\n          margin: 0 auto;\r\n          max-width: 80%;\r\n        `}\r\n                >\r\n                    <div id=\"header\"\r\n                        css={css`\r\n                        display:flex;\r\n                        flex-direction: row;\r\n                        justify-content:space-between;\r\n                `}\r\n                    >\r\n                        <div id=\"title\"\r\n                            css={css`\r\n                    `}\r\n                        >\r\n                            <Link to={`/`}>\r\n                                <h3>  {siteTitle}\r\n                                </h3>\r\n                            </Link>\r\n                        </div>\r\n                        <div id=\"sub\"\r\n                            css={css`\r\n                        display:flex;\r\n                        flex-direction: row;\r\n                        > * {\r\n                            margin-right:10px;\r\n                        }\r\n                        `}\r\n                        >\r\n                            {\r\n                                categories.map((c) => {\r\n                                    const link = `/?category=${c[0]}`\r\n                                    return (<Link to={link}>{c[0]}</Link>)\r\n                                })\r\n                            }\r\n                            <div id=\"about\">\r\n                                <Link to={\"/about\"}>about</Link></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"body\"\r\n                        css={css`\r\n          margin: 0 auto;\r\n          max-width: 80%;\r\n       `\r\n                        }\r\n\r\n                    > {children} </div>\r\n                </div>\r\n            )\r\n        }}\r\n    />\r\n)\r\n","function timeAgo(left, right) {\n  const leftDate = new Date(left)\n  const rightDate = new Date(right)\n  if (leftDate.getFullYear() !== rightDate.getFullYear()) {\n    return left\n  }\n\n  const data = {\n    月: [leftDate.getMonth() + 1, rightDate.getMonth() + 1],\n    天: [leftDate.getDate(), rightDate.getDate()],\n    小时: [leftDate.getHours(), rightDate.getHours()],\n    分钟: [leftDate.getMinutes(), rightDate.getMinutes()],\n  }\n  for (let key of Object.keys(data)) {\n    const Case = data[key]\n    if (Case[0] !== Case[1]) {\n      return `${Case[1] - Case[0]}${key}前`\n    }\n  }\n  return \"1分钟内\"\n}\n\nexport default { timeAgo }\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\nimport Layout from \"../components/layout\"\r\nimport util from \"../utils/util\"\r\nimport Article from \"../utils/article\";\r\n\r\nfunction renderIndexPage(data, category) {\r\n    let articles = data.sort(\r\n        (l, r) => new Date(r.time) - new Date(l.time)\r\n    )\r\n    if (category != \"\") {\r\n        articles = articles.filter((a) => a.category.includes(category))\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <h4>{articles.length} Posts</h4>\r\n                {articles.map(article => {\r\n                    return (\r\n                        <div key={article.node.id}>\r\n                            <Link\r\n                                to={article.node.fields.slug}\r\n                                css={css`\r\n                    text-decoration: none;\r\n                  `}\r\n                            >\r\n                                <div\r\n                                    className=\"article\"\r\n                                    css={css`\r\n                      margin-bottom: 10px;\r\n                    `}\r\n                                >\r\n                                    <div\r\n                                        className=\"category\"\r\n                                        css={css`\r\n                        color: black;\r\n                      `}\r\n                                    >\r\n                                        category: {article.category.join(\"->\")}\r\n                                    </div>\r\n                                    <div className=\"title\">\r\n                                        <span\r\n                                            css={css`\r\n                          font-size: 150%;\r\n                        `}\r\n                                        >\r\n                                            {article.title}\r\n                                        </span>\r\n                                        <span\r\n                                            css={css`\r\n                          font-size: 100%;\r\n                        `}\r\n                                        >\r\n                                            -{util.timeAgo(article.time, new Date())}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ({ data }) => {\r\n    let category = \"\"\r\n    // server side render\r\n    if (typeof window != 'undefined') {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        category = urlParams.get('category') || \"\"\r\n    }\r\n\r\n    const allArticles = data.allMarkdownRemark.edges\r\n        .map(({ node }) => Article.fromMarkDownNode(node))\r\n        .filter(([article, err]) => !err)\r\n        .map(([article, err]) => article)\r\n        .filter((article) => article.id)\r\n        .filter((article) => article.category.length != 0)\r\n\r\n    return renderIndexPage(allArticles, category)\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            tag\r\n            time\r\n            id\r\n          }\r\n\r\n          parent {\r\n            ... on File {\r\n              name\r\n              ext\r\n              birthTime\r\n              changeTime\r\n              relativeDirectory\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","class Article {\r\n    constructor(data) {\r\n        Object.assign(this, data)\r\n    }\r\n\r\n    static fromMarkDownNode(node) {\r\n        const { name, birthTime, changeTime, relativeDirectory } = node.parent\r\n        let { id, time, tag } = node.frontmatter\r\n        tag = tag || []\r\n        const regex = /(\\/|\\\\)/gm;\r\n\r\n        const directories =\r\n            relativeDirectory.split(regex).filter(s => s.length!=0&& s!=`\\\\`&&s!=`\\/`) || []\r\n        const [title, category, err] = Article.parserNameAndCategory(\r\n            directories,\r\n            name,\r\n            node.frontmatter.title\r\n        )\r\n        if (err) {\r\n            console.error(\"fromMarkDownNode fail\", node, err)\r\n            return [null, \"fromMarkDownNode fail\"]\r\n        }\r\n\r\n        return [new Article({ title, category, id, time, tag, node }), null]\r\n    }\r\n\r\n    /*  \r\n    directories:Vec<NotEmptyString>\r\n    filenName:NotEmptyString,\r\n    frontmatterTitle:Option<NotEmptyString>\r\n    */\r\n\r\n    // why i use go err handle? why? T_T\r\n    static parserNameAndCategory(directories, fileName, frontmatterTitle) {\r\n        if (!fileName || fileName.length === 0) {\r\n            return [null, null, \"fileName could not be empty\"]\r\n        }\r\n        if (directories.length === 0 && fileName === \"main\") {\r\n            return [\r\n                null,\r\n                null,\r\n                \"fileName could not be main when this file under root dir\",\r\n            ]\r\n        }\r\n\r\n        let title = null\r\n        let category = []\r\n        if (directories.length === 0) {\r\n            title = fileName\r\n            category = []\r\n        } else if (\r\n            directories[directories.length - 1] === fileName ||\r\n            fileName === \"main\"\r\n        ) {\r\n            title = directories[directories.length - 1]\r\n            category = directories.slice(0, -1)\r\n        } else {\r\n            title = fileName\r\n            category = directories\r\n        }\r\n        if (frontmatterTitle) {\r\n            title = frontmatterTitle\r\n        }\r\n        return [title, category, null]\r\n    }\r\n\r\n}\r\nexport default Article"],"sourceRoot":""}